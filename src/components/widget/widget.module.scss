@import '../../utils/sass/abstracts/all';

@mixin widget($p) {
    background-color: _palette($p, bg);
    color: _palette($p, fg);

    // Basic

        strong, b {
            color: _palette($p, fg-bold);
        }

        hr {
            border-color: _palette($p, border);
        }

        blockquote {
            border-color: _palette($p, border);
        }

        code {
            background: _palette($p, border-bg);
        }

    // Section/Article

        header {
            p {
                color: _palette($p, fg-light);
            }

            &.major {
                margin: 0 0 (_size(element-margin) * 1.75) 0;

                h2, h3, h4, h5, h6 {
                    border-bottom: solid 2px _palette($p, border);
                    display: inline-block;
                    padding-bottom: 1em;
                    position: relative;

                    &:after {
                        content: '';
                        display: block;
                        height: 1px;
                    }

                }
                p {
                    color: _palette(fg);
                    top: 0;
                }
        
                @include breakpoint(small) {
                    margin: 0 0 _size(element-margin) 0;
                }

            }

            @include breakpoint(medium) {
                br {
                    display: none;
                }
            }

        }

    // Form

        label {
            color: _palette($p, fg-bold);
        }

        input[type="text"],
        input[type="password"],
        input[type="email"],
        select,
        textarea {
            background: _palette($p, border-bg);
        }

        .select-widget {
            &:before {
                color: _palette($p, border);
            }
        }

        input[type="checkbox"],
        input[type="radio"], {
            & + label {
                color: _palette($p, fg);

                &:before {
                    background: _palette($p, border-bg);
                }
            }

            &:checked + label {
                &:before {
                    background: _palette($p, fg-bold);
                    color: _palette($p, bg);
                }
            }
        }

        ::-webkit-input-placeholder {
            color: _palette($p, fg-light) !important;
        }

        :-moz-placeholder {
            color: _palette($p, fg-light) !important;
        }

        ::-moz-placeholder {
            color: _palette($p, fg-light) !important;
        }

        :-ms-input-placeholder {
            color: _palette($p, fg-light) !important;
        }

        .formerize-placeholder {
            color: _palette($p, fg-light) !important;
        }

    // Icon

        .icon {
            &.major {
                border-color: _palette($p, border);
            }
        }

    // List

        ul {
            &.alt {
                li {
                    border-color: _palette($p, border);
                }
            }
        }

    // Table

        table {
            tbody {
                tr {
                    border-color: _palette($p, border);

                    &:nth-child(2n + 1) {
                        background-color: _palette($p, border-bg);
                    }
                }
            }

            th {
                color: _palette($p, fg-bold);
            }

            thead {
                border-color: _palette($p, border);
            }

            tfoot {
                border-color: _palette($p, border);
            }

            &.alt {
                tbody {
                    tr {
                        td {
                            border-color: _palette($p, border);
                        }
                    }
                }
            }
        }

    // Button

        input[type="submit"],
        input[type="reset"],
        input[type="button"],
        button,
        .button {
            box-shadow: inset 0 0 0 2px _palette($p, border);
            color: _palette($p, fg-bold);

            &:hover {
                background-color: _palette($p, border-bg);
            }

            &:active {
                background-color: _palette($p, border2-bg);
            }
        }

    // Features

        .features {
            li {
                @include breakpoint(small) {
                    border-top-color: _palette($p, border);
                }
            }
        }

}

.widget {
    @include padding(6em, 0);

    > .inner {
        width: 60em;
        margin: 0 auto;

        @include breakpoint(large) {
            width: 90%;
        }

        @include breakpoint(medium) {
            width: 100%;
        }
    }

    @include breakpoint(medium) {
        @include padding(4em, 3em);
    }

    @include breakpoint(small) {
        @include padding(3em, 2em);
    }
}

.fullWidth {
    padding: 0;
    .inner {
        width: 100%;
    }
}

.textCenter {
    text-align: center;
}

.style1 {
    @include widget(accent1);
}

.style2 {
    background-color: _palette(bg);
}

.style3 {
    @include widget(accent5);
}

.style4 {
    @include vendor('background-image', ('linear-gradient(top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))', 'url("../../assets/images/home/hero7.jpg")'));
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
}

.style5 {
    @include widget(accent7);
    h1, h2, h3, h4, h5, h6 {
        color: _palette(bg);
    }
}

.cta {
    @include vendor('background-image', ('linear-gradient(top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))', 'url("../../assets/images/home/hero7.jpg")'));
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    .inner {
        @include vendor('display', 'flex');
        max-width: 45em;

        header {
            @include vendor('order', '1');
            padding-right: 3em;
            width: 70%;

            p {
                color: inherit;
            }
        }

        ul {
            @include vendor('order', '2');
            width: 30%;
        }

        @include breakpoint(medium) {
            display: block;
            text-align: center;

            header {
                padding-right: 0;
                width: 100%;
            }

            ul {
                margin-left: auto;
                margin-right: auto;
                max-width: 20em;
                width: 100%;
            }
        }

        @include breakpoint(small) {
            .actions {
                max-width: none;
            }
        }
    }
}